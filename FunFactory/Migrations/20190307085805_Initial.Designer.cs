// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp.Data;

namespace WebApp.Migrations
{
    [DbContext(typeof(FunFactoryDbContext))]
    [Migration("20190307085805_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApp.Domain.Component", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.Property<string>("Sku");

                    b.Property<int>("StockQty");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("WebApp.Domain.KitComponent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ComponentId");

                    b.Property<long?>("KitId");

                    b.Property<int>("Qty");

                    b.HasKey("Id");

                    b.HasIndex("ComponentId");

                    b.HasIndex("KitId");

                    b.ToTable("Components");
                });

            modelBuilder.Entity("WebApp.Domain.KitComponent", b =>
                {
                    b.HasOne("WebApp.Domain.Component", "Component")
                        .WithMany("KitComponents")
                        .HasForeignKey("ComponentId");

                    b.HasOne("WebApp.Domain.Component", "Kit")
                        .WithMany()
                        .HasForeignKey("KitId");
                });
#pragma warning restore 612, 618
        }
    }
}
